<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>Admin</author>
  <title>Syntax Highligting on Server Side (aka Code Format Rendering)</title>
  <description />
  <content>&lt;p&gt;
Here is the code being used as and Extension to render code. 
&lt;/p&gt;
&lt;p&gt;
The format is [code:lang] Your code [code].&amp;nbsp; I am tinkering with the format because I am curious if there will be a need for other options.&amp;nbsp; Like forcing&amp;nbsp; a block display so that the code wraps, does not wrap, etc.&amp;nbsp; the 
&lt;/p&gt;
&lt;p&gt;
Simply replace the &amp;quot;lang&amp;quot; in [code:lang]&amp;nbsp; with the options c#, vb, js, html, xml, tsl, or msh.&amp;nbsp; The system handles the rest. 
&lt;/p&gt;
&lt;p&gt;
By the way you need the current builds or need to add the style sheet additions at the end of the post. 
&lt;/p&gt;
&lt;p&gt;
[code:c#] 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;#region using 
&lt;/p&gt;
&lt;p&gt;
using System;&lt;br /&gt;
using System.IO;&lt;br /&gt;
using System.Web;&lt;br /&gt;
using System.Text.RegularExpressions;&lt;br /&gt;
using BlogEngine.Core;&lt;br /&gt;
using BlogEngine.Core.Web;&lt;br /&gt;
using CodeFormatter; 
&lt;/p&gt;
&lt;p&gt;
#endregion 
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
/// &amp;lt;summary&amp;gt;&lt;br /&gt;
/// &amp;lt;/summary&amp;gt;&lt;br /&gt;
/// &amp;lt;remarks&amp;gt;&lt;br /&gt;
/// It is a work in progress.....&lt;br /&gt;
/// &amp;lt;/remarks&amp;gt;&lt;br /&gt;
[Extension(&amp;quot;Changes &amp;lt;code:lang&amp;gt;&amp;lt;/code&amp;gt;.&amp;nbsp; Adapted from Jean-Claude Manoli [jc@manoli.net].&amp;quot;, &amp;quot;0.0.0.1&amp;quot;, &amp;quot;&lt;a href="http://www.manoli.net/"&gt;www.manoli.net&lt;/a&gt;&amp;quot;)]&lt;br /&gt;
public class CodeFormatters&lt;br /&gt;
{ 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; //Characters other than . $ ^ { [ ( | ) * + ? \ match themselves.&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; static readonly Regex _CSharpRegex = new Regex(@&amp;quot;\[code\:c\#].*\[code]&amp;quot;, RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.Singleline);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; static readonly Regex _VBRegex = new Regex(@&amp;quot;\[code\:vb].*\[code]&amp;quot;, RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; static readonly Regex _JavaScriptRegex = new Regex(@&amp;quot;\[code\:js].*\[code]&amp;quot;, RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; static readonly Regex _HTMLRegex = new Regex(@&amp;quot;\[code\:html].*\[code]&amp;quot;, RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; static readonly Regex _XMLRegex = new Regex(@&amp;quot;\[code\:xml].*\[code]&amp;quot;, RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; static readonly Regex _TSQLRegex = new Regex(@&amp;quot;\[code\:tsql].*\[code]&amp;quot;, RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; static readonly Regex _MSHRegex = new Regex(@&amp;quot;\[code\:msh].*\[code]&amp;quot;, RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled); 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; private enum CodeLanguages&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; csharp, vb, js, html, xml, tsql, msh&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; } 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; public CodeFormatters()&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Post.Serving += new EventHandler&amp;lt;ServingEventArgs&amp;gt;(Post_Serving);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; } 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; void Post_Serving(object sender, ServingEventArgs e)&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /*&amp;nbsp; It supports the following.&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * C#&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * VB&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * JS&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * HTML&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * XML&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * T-SQL&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * MSH (code name Monad) --I don&amp;#39;t have a clue.&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; */&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (!string.IsNullOrEmpty(e.Body))&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e.Body = _CSharpRegex.Replace(e.Body, new MatchEvaluator(MatchEval));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e.Body = _VBRegex.Replace(e.Body, new MatchEvaluator(MatchEval));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e.Body = _JavaScriptRegex.Replace(e.Body, new MatchEvaluator(MatchEval));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e.Body = _HTMLRegex.Replace(e.Body, new MatchEvaluator(MatchEval));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e.Body = _XMLRegex.Replace(e.Body, new MatchEvaluator(MatchEval));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e.Body = _TSQLRegex.Replace(e.Body, new MatchEvaluator(MatchEval));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; e.Body = _MSHRegex.Replace(e.Body, new MatchEvaluator(MatchEval)); 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; } 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; private static string MatchEval(Match match)&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; foreach (Match mat in match.Groups)&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (mat.Success)&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; string matchString = match.ToString();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; string langType = matchString.Remove(0, 6);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; langType = langType.Remove(langType.IndexOf(&amp;quot;]&amp;quot;)); 
&lt;/p&gt;
&lt;p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; switch (langType)&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; case &amp;quot;c#&amp;quot;:&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code:c#]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CSharpFormat csf = new CSharpFormat();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return HttpContext.Current.Server.HtmlDecode(csf.FormatCode(matchString));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; case &amp;quot;vb&amp;quot;:&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code:vb]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CodeFormatter.VisualBasicFormat vbf = new VisualBasicFormat();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return HttpContext.Current.Server.HtmlEncode(vbf.FormatCode(matchString));&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; case &amp;quot;js&amp;quot;:&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code:js]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CodeFormatter.JavaScriptFormat jsf = new JavaScriptFormat();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return jsf.FormatCode(matchString);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; case &amp;quot;html&amp;quot;:&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code:html]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CodeFormatter.HtmlFormat htmlf = new HtmlFormat();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return htmlf.FormatCode(matchString);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; case &amp;quot;xml&amp;quot;:&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code:xml]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CodeFormatter.HtmlFormat xmlf = new HtmlFormat();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return xmlf.FormatCode(matchString);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; case &amp;quot;tsql&amp;quot;:&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code:tsql]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CodeFormatter.TsqlFormat tsqlf = new TsqlFormat();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return tsqlf.FormatCode(matchString);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; case &amp;quot;msh&amp;quot;:&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code:msh]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; matchString = matchString.Replace(&amp;quot;[code]&amp;quot;, &amp;quot;&amp;quot;);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; CodeFormatter.MshFormat mshf = new MshFormat();&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return mshf.FormatCode(matchString);&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return &amp;quot;&amp;quot;; //no match&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;
} 
&lt;/p&gt;
&lt;p&gt;
[code] 
&lt;/p&gt;
&lt;font size="2" color="#008000"&gt;
&lt;p&gt;
/* code styles for CodeFormatter Extension*/ 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt;, &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.csharpcode&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;pre&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2"&gt;
&lt;p&gt;
{ 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;font-size&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;small&lt;/font&gt;&lt;font size="2"&gt;;&lt;/font&gt;&lt;font size="2"&gt; 
&lt;p&gt;
&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;black&lt;/font&gt;&lt;font size="2"&gt;;&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;font-family&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;Consolas,&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;&amp;quot;Courier New&amp;quot;,&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;Courier,&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;Monospace&lt;/font&gt;&lt;font size="2"&gt;;&lt;/font&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;background-color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#ffffff&lt;/font&gt;&lt;font size="2"&gt;;&lt;/font&gt;&lt;font size="2"&gt; 
&lt;p&gt;
&amp;nbsp;
&lt;/p&gt;
&lt;p&gt;
} 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;pre&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;margin&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;0em&lt;/font&gt;&lt;font size="2"&gt;;}&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.rem&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#008000&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.kwrd&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#0000ff&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.str&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#006080&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.op&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#0000c0&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.preproc&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#cc6633&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.asp&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;background-color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#ffff00&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.html&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#800000&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.attr&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#ff0000&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.csharpcode&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.alt&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2"&gt;
&lt;p&gt;
{ 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;background-color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#f4f4f4&lt;/font&gt;&lt;font size="2"&gt;;&lt;/font&gt;&lt;font size="2"&gt; 
&lt;p&gt;
&lt;font size="2" color="#ff0000"&gt;width&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;100%&lt;/font&gt;&lt;font size="2"&gt;;&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;margin&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;0em&lt;/font&gt;&lt;font size="2"&gt;;&lt;/font&gt;&lt;font size="2"&gt; 
&lt;p&gt;
} 
&lt;/p&gt;
&lt;/font&gt;&lt;font size="2" color="#a31515"&gt;
&lt;p&gt;
.csharpcode&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2" color="#a31515"&gt;.lnum&lt;/font&gt;&lt;font size="2"&gt; { &lt;/font&gt;&lt;font size="2" color="#ff0000"&gt;color&lt;/font&gt;&lt;font size="2"&gt;: &lt;/font&gt;&lt;font size="2" color="#0000ff"&gt;#606060&lt;/font&gt;&lt;font size="2"&gt;; }&lt;/font&gt; 
&lt;/p&gt;
&lt;/font&gt;
</content>
  <ispublished>True</ispublished>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2007-08-15 15:09:00</pubDate>
  <lastModified>2007-08-24 13:11:56</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>test code</slug>
  <tags />
  <comments>
    <comment id="32641ff5-3e9b-4c15-9de5-0b964defbbeb" approved="True">
      <date>2007-08-22 08:01:24</date>
      <author>Admin</author>
      <email>post@example.com</email>
      <country>us</country>
      <ip>127.0.0.1</ip>
      <content>afaf</content>
    </comment>
  </comments>
  <categories />
  <notifications />
</post>