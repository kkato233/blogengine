<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetSlave.BlogEngine.BusinessLogic</name>
    </assembly>
    <members>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.PingService">
            <summary>
            Pings various blog ping services.
            <remarks>
            Whenever a post is created or updated, it is important
            to notify the ping services so that they have the latest
            updated posts from the blog.
            </remarks>
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.PingService.Send">
            <summary>
            Sends a ping to various ping services asynchronously.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.PingService.Execute(System.String)">
            <summary>
            Creates a web request and invokes the response asynchronous.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.PingService.EndGetResponse(System.IAsyncResult)">
            <summary>
            Receives the response.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.PingService.AddXmlToRequest(System.Net.HttpWebRequest)">
            <summary>
            Adds the XML to web request. The XML is the standard
            XML used by RPC-XML requests.
            </summary>
        </member>
        <member name="T:BlogSettings">
            <summary>
            Settings used by the blog engine.
            </summary>
        </member>
        <member name="M:BlogSettings.Save">
            <summary>
            Saves the settings to disk.
            </summary>
        </member>
        <member name="P:BlogSettings.Instance">
            <summary>
            The singleton instance of the class.
            </summary>
        </member>
        <member name="P:BlogSettings.Name">
            <summary>
            Gets or sets the name of the blog.
            </summary>
        </member>
        <member name="P:BlogSettings.Description">
            <summary>
            Gets or sets the description of the blog.
            Is also used for the description meta tag.
            </summary>
        </member>
        <member name="P:BlogSettings.PostsPerPage">
            <summary>
            Gets or sets the number of posts to show an each page.
            </summary>
        </member>
        <member name="P:BlogSettings.BlogrollMaxLength">
            <summary>
            Gets or sets the character length of the items.
            </summary>
        </member>
        <member name="P:BlogSettings.BlogrollVisiblePosts">
            <summary>
            Gets or sets the number of items to show.
            </summary>
        </member>
        <member name="P:BlogSettings.Theme">
            <summary>
            Gets or sets which theme to use.
            </summary>
        </member>
        <member name="P:BlogSettings.EnableRelatedPosts">
            <summary>
            Gets or sets whether or not related posts should be shown.
            </summary>
        </member>
        <member name="P:BlogSettings.Email">
            <summary>
            Gets or sets the e-mail address.
            </summary>
        </member>
        <member name="P:BlogSettings.SmtpServer">
            <summary>
            Gets or sets the address to the SMTP server.
            </summary>
        </member>
        <member name="P:BlogSettings.SmtpUsername">
            <summary>
            Gets or sets the username for the SMTP server.
            </summary>
        </member>
        <member name="P:BlogSettings.SmtpPassword">
            <summary>
            Gets or sets the password to the SMTP server.
            </summary>
        </member>
        <member name="P:BlogSettings.SendMailOnComment">
            <summary>
            Gets or sets whether or not to be notified by mail
            when a new comment is added to a post.
            </summary>
        </member>
        <member name="P:BlogSettings.IsCommentsEnabled">
            <summary>
            Gets or sets whether or not comments are enabled.
            </summary>
        </member>
        <member name="E:BlogSettings.Changed">
            <summary>
            Occurs when the settings have been changed.
            </summary>
        </member>
        <member name="F:DotNetSlave.BlogEngine.BusinessLogic.CommentViewBase.regex">
            <summary>
            The regular expression used to parse links.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.CommentViewBase.ResolveLinks(System.String)">
            <summary>
            Examins the comment body for any links and turns them
            automatically into one that can be clicked.
            <remarks>
            All links added to comments will have the rel attribute set
            to nofollow to prevent negative pagerank.
            </remarks>
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.CommentViewBase.Gravatar(System.Int32)">
            <summary>
            Displays the Gravatar image that matches the specified email.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.CommentViewBase.AdminLinks">
            <summary>
            Displays a delete link to visitors that is authenticated
            using the default membership provider.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.CommentViewBase.Flag">
            <summary>
            Displays the flag of the country from which the comment was written.
            <remarks>
            If the country hasn't been resolved from the authors IP address or
            the flag does not exist for that country, nothing is displayed.
            </remarks>
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider">
            <summary>
            A storage provider for BlogEngine that uses XML files.
            <remarks>
            To build another provider, you can just copy and modify
            this one. Then add it to the web.config's BlogEngine section.
            </remarks>
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.BlogProvider">
            <summary>
            A base class for all custom providers to inherit from.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.SelectPost(System.Guid)">
            <summary>
            Retrieves a post based on the specified Id.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.InsertPost(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Inserts a new Post to the data store.
            </summary>
            <param name="post"></param>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.UpdatePost(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Updates a Post.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.DeletePost(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Deletes a post from the data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.SelectPage(System.Guid)">
            <summary>
            Retrieves a Page from the data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.InsertPage(DotNetSlave.BlogEngine.BusinessLogic.Page)">
            <summary>
            Inserts a new Page to the data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.UpdatePage(DotNetSlave.BlogEngine.BusinessLogic.Page)">
            <summary>
            Updates a Page.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.DeletePage(DotNetSlave.BlogEngine.BusinessLogic.Page)">
            <summary>
            Deletes a page from the data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.LoadCategories">
            <summary>
            Loads all categories from the data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlBlogProvider.SaveCategories(DotNetSlave.BlogEngine.BusinessLogic.CategoryDictionary)">
            <summary>
            Saves the categories to the data store.
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.Utils">
            <summary>
            Utilities for the entire solution to use.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Utils.RemoveIlegalCharacters(System.String)">
            <summary>
            Strips all illegal characters from the specified title.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Utils.RelativeWebRoot">
            <summary>
            Gets the relative root of the website.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Utils.AbsoluteWebRoot">
            <summary>
            Gets the absolute root of the website.
            </summary>
        </member>
        <member name="T:BlogBasePage">
            <summary>
            Summary description for BlogBasePage
            </summary>
        </member>
        <member name="M:BlogBasePage.OnPreInit(System.EventArgs)">
            <summary>
            Assignes the selected theme to the pages.
            </summary>
        </member>
        <member name="M:BlogBasePage.AddMetaTag(System.String,System.String)">
            <summary>
            Add a meta tag to the page's header.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.ValidateUser(System.String,System.String)">
            <summary>
            Returns true if the username and password match an exsisting user.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.GetUser(System.String,System.Boolean)">
            <summary>
            Retrieves a user based on his/hers username.
            the userIsOnline parameter is ignored.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Retrieves a collection of all the users.
            This implementation ignores pageIndex and pageSize,
            and it doesn't sort the MembershipUser objects returned.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Changes a users password.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Creates a new user store he/she in the XML file
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.DeleteUser(System.String,System.Boolean)">
            <summary>
            Deletes the user from the XML file and 
            removes him/her from the internal cache.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.GetUser(System.Object,System.Boolean)">
            <summary>
            Get a user based on the username parameter.
            the userIsOnline parameter is ignored.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.GetUserNameByEmail(System.String)">
            <summary>
            Retrieves a username based on a matching email.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates a user. The username will not be changed.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.XmlMembershipProvider.ReadMembershipDataStore">
            <summary>
            Builds the internal cache of users.
            </summary>
        </member>
        <member name="T:StateCollection`1">
            <summary>
            A generic collection with the ability to 
            check if it has been changed.
            </summary>
        </member>
        <member name="M:StateCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an element into the collection at the specified index and marks it changed.
            </summary>
        </member>
        <member name="M:StateCollection`1.ClearItems">
            <summary>
            Removes all the items in the collection and marks it changed.
            </summary>
        </member>
        <member name="M:StateCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index and marks the collection changed.
            </summary>
        </member>
        <member name="M:StateCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Replaces the element at the specified index and marks the collection changed.
            </summary>
        </member>
        <member name="P:StateCollection`1.IsChanged">
            <summary>
            Gets if this object's data has been changed.
            </summary>
            <returns>A value indicating if this object's data has been changed.</returns>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.Pingback">
            <summary>
            Sends pingbacks to website that the blog links to.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Pingback.Send(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Sends pingbacks to all external links in the specified post.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Pingback.AddXmlToRequest(System.String,System.String,System.Net.HttpWebRequest)">
            <summary>
            Adds the XML to web request. The XML is the standard
            XML used by RPC-XML requests.
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.Comment">
            <summary>
            Represents a comment to a blog post.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Comment.CompareTo(DotNetSlave.BlogEngine.BusinessLogic.Comment)">
            <summary>
            Compares the comment to another.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Comment.Id">
            <summary>
            The Id of the comment.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Comment.Author">
            <summary>
            Gets or sets the Author or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Comment.Email">
            <summary>
            Gets or sets the Email or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Comment.Website">
            <summary>
            Gets or sets the Website or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Comment.Content">
            <summary>
            Gets or sets the Content or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Comment.DateCreated">
            <summary>
            Gets or sets when the comment was created.
            </summary>
        </member>
        <member name="T:PostViewBase">
            <summary>
            The PostView.ascx that is located in the themes folder
            has to inherit from this class. 
            <remarks>
            It provides the basic functionaly needed to display a post.
            </remarks>
            </summary>
        </member>
        <member name="M:PostViewBase.Page_Init(System.Object,System.EventArgs)">
            <summary>
            Manages the deletion of posts.
            </summary>
        </member>
        <member name="M:PostViewBase.CategoryLinks(System.String)">
            <summary>
            Displays the Post's categories seperated by the specified string.
            </summary>
        </member>
        <member name="M:PostViewBase.TagLinks(System.String)">
            <summary>
            Displays the Post's tags seperated by the specified string.
            </summary>
        </member>
        <member name="P:PostViewBase.Post">
            <summary>
            The Post object that is displayed through the PostView.ascx control.
            </summary>
        </member>
        <member name="P:PostViewBase.AdminLinks">
            <summary>
            Displays an Edit and Delete link to any 
            authenticated user.
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.CategoryDictionary">
            <summary>
            A dictionary for all Post categories.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.CategoryDictionary.Add(System.String)">
            <summary>
            Adds a new category to the dictionary.
            </summary>
            <returns>The id of the new category.</returns>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.CategoryDictionary.Save">
            <summary>
            Save the categories.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.CategoryDictionary.Instance">
            <summary>
            Gets the singleton instance of the class.
            </summary>
        </member>
        <member name="E:DotNetSlave.BlogEngine.BusinessLogic.CategoryDictionary.Saved">
            <summary>
            Occurs when the class is Saved
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.Post">
            <summary>
            A post is an entry on the blog - a blog post.
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2">
            <summary>
            This is the base class from which most business objects will be derived. 
            To create a business object, inherit from this class.
            </summary>
            <typeparam name="TYPE">The type of the derived class.</typeparam>
            <typeparam name="KEY">The type of the Id property.</typeparam>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Delete">
            <summary>
            Marks the object for deletion. It will then be 
            deleted when the object's Save() method is called.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.MarkDirty(System.String)">
            <summary>
            Marks an object as being dirty, or changed.
            </summary>
            <param name="propertyName">The name of the property to mark dirty.</param>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.MarkOld">
            <summary>
            Marks the object as being an clean, 
            which means not dirty.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.IsPropertyDirty(System.String)">
            <summary>
            Check whether or not the specified property has been changed
            </summary>
            <param name="propertyName">The name of the property to check.</param>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.IsPropertyDirty(System.String[])">
            <summary>
            Check whether or not the specified properties has been changed
            </summary>
            <param name="propertyNames">The names of the properties to check.</param>
            <returns>True if all of the specified properties have been changed.</returns>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.AddRule(System.String,System.String,System.Boolean)">
            <summary>
            Add or remove a broken rule.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="errorMessage">The description of the error</param>
            <param name="isBroken">True if the validation rule is broken.</param>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.ValidationRules">
            <summary>
            Reinforces the business rules by adding additional rules to the 
            broken rules collection.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Load(`1)">
            <summary>
            Loads an instance of the object based on the Id.
            </summary>
            <param name="id">The unique identifier of the object</param>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Save">
            <summary>
            Saves the object to the database.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Update">
            <summary>
            Is called by the save method when the object is old and dirty.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.DataSelect(`1)">
            <summary>
            Retrieves the object from the data store and populates it.
            </summary>
            <param name="id">The unique identifier of the object.</param>
            <returns>True if the object exists and is being populated successfully</returns>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.DataUpdate">
            <summary>
            Updates the object in its data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.DataInsert">
            <summary>
            Inserts a new object to the data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.DataDelete">
            <summary>
            Deletes the object from the data store.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Dispose(System.Boolean)">
            <summary>
            Disposes the object and frees ressources for the Garbage Collector.
            </summary>
            <param name="disposing">If true, the object gets disposed.</param>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Dispose">
            <summary>
            Disposes the object and frees ressources for the Garbage Collector.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.GetHashCode">
            <summary>
            A uniquely key to identify this particullar instance of the class
            </summary>
            <returns>A unique integer value</returns>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Equals(System.Object)">
            <summary>
            Comapares this object with another
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the two objects as equal</returns>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.op_Equality(DotNetSlave.BlogEngine.BusinessLogic.BusinessBase{`0,`1},DotNetSlave.BlogEngine.BusinessLogic.BusinessBase{`0,`1})">
            <summary>
            Checks to see if two business objects are the same.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.op_Inequality(DotNetSlave.BlogEngine.BusinessLogic.BusinessBase{`0,`1},DotNetSlave.BlogEngine.BusinessLogic.BusinessBase{`0,`1})">
            <summary>
            Checks to see if two business objects are different.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.OnSaved(DotNetSlave.BlogEngine.BusinessLogic.BusinessBase{`0,`1})">
            <summary>
            Occurs when the class is Saved
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.Id">
            <summary>
            Gets the unique Identification of the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.DateCreated">
            <summary>
            The date on which the instance was created.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.DateModified">
            <summary>
            The date on which the instance was modified.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.IsNew">
            <summary>
            Gets if this is a new object, False if it is a pre-existing object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.IsDeleted">
            <summary>
            Gets if this object is marked for deletion.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.IsDirty">
            <summary>
            Gets if this object's data has been changed.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.DirtyProperties">
            <summary>
            A collection of the properties that have 
            been marked as being dirty.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.IsValid">
            <summary>
            Gets whether the object is valid or not.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.ValidationMessage">
            /// <summary>
            If the object has broken business rules, use this property to get access
            to the different validation messages.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BusinessBase`2.IsDisposed">
            <summary>
            Gets or sets if the object has been disposed.
            <remarks>
            If the objects is disposed, it must not be disposed a second
            time. The IsDisposed property is set the first time the object
            is disposed. If the IsDisposed property is true, then the Dispose()
            method will not dispose again. This help not to prolong the object's
            life if the Garbage Collector.
            </remarks>
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.#ctor">
            <summary>
            The default contstructor assign default values.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.GetPostsByCategory(System.Guid)">
            <summary>
            Returns all posts in the specified category
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.GetPost(System.Guid)">
            <summary>
            Returs a post based on the specified id.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.IsTitleUnique(System.String)">
            <summary>
            Checks to see if the specified title has already been used
            by another post.
            <remarks>
            Titles must be unique because the title is part of the URL.
            </remarks>
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.GetPostByName(System.String)">
            <summary>
            Returns a post based on it's title.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.GetPostsByAuthor(System.String)">
            <summary>
            Returns all posts written by the specified author.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.GetPostsByTag(System.String)">
            <summary>
            Returns all posts tagged with the specified tag.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.GetPostsByDate(System.DateTime,System.DateTime)">
            <summary>
            Returns all posts published between the two dates.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.ValidationRules">
            <summary>
            Validates the Post instance.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.DataSelect(System.Guid)">
            <summary>
            Returns a Post based on the specified id.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.DataUpdate">
            <summary>
            Updates the Post.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.DataInsert">
            <summary>
            Inserts a new post to the current BlogProvider.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.DataDelete">
            <summary>
            Deletes the Post from the current BlogProvider.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Post.CompareTo(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Compares this post to another instance.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Author">
            <summary>
            Gets or sets the Author or the post.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Title">
            <summary>
            Gets or sets the Title or the post.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Description">
            <summary>
            Gets or sets the Description or the post.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Content">
            <summary>
            Gets or sets the Content or the post.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Comments">
            <summary>
            A collection of comments sorted by date.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Categories">
            <summary>
            An unsorted collection of categories.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Tags">
            <summary>
            An unsorted collection of tags.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.IsCommentsEnabled">
            <summary>
            Gets or sets the EnableComments or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.IsPublished">
            <summary>
            Gets or sets the IsPublished or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.PermaLink">
            <summary>
            The absolute permanent link to the post.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.RelativeLink">
            <summary>
            A relative-to-the-site-root path to the post.
            Only for in-site use.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.AbsoluteLink">
            <summary>
            The absolute link to the post.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.TrackbackLink">
            <summary>
            The trackback link to the post.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.Posts">
            <summary>
            A sorted collection of all posts in the blog.
            Sorted by date.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Post.IsDirty">
            <summary>
            Gets if the Post have been changed.
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.Page">
            <summary>
            A page is much like a post, but is not part of the
            blog chronology and is more static in nature.
            <remarks>
            Pages can be used for "About" pages or other static
            information.
            </remarks>
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Page.#ctor">
            <summary>
            The contructor sets default values.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Page.GetPage(System.Guid)">
            <summary>
            Returns a page based on the specified id.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Page.ValidationRules">
            <summary>
            Validates the properties on the Page.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Page.DataSelect(System.Guid)">
            <summary>
            Retrieves a page form the BlogProvider
            based on the specified id.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Page.DataUpdate">
            <summary>
            Updates the page.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Page.DataInsert">
            <summary>
            Inserts a new page to current BlogProvider.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.Page.DataDelete">
            <summary>
            Deletes the page from the current BlogProvider.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Page.Title">
            <summary>
            Gets or sets the Title or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Page.Content">
            <summary>
            Gets or sets the Description or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Page.Description">
            <summary>
            Gets or sets the Description or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Page.Keywords">
            <summary>
            Gets or sets the Keywords or the object.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Page.RelativeLink">
            <summary>
            The relative URI to the page. For in-site use only.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Page.AbsoluteLink">
            <summary>
            The absolute URI to the path.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.Page.Pages">
            <summary>
            Gets an unsorted list of all pages.
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.BlogService">
            <summary>
            The proxy class for communication between
            the business objects and the providers.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.LoadProviders">
            <summary>
            Load the providers from the web.config.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.SelectPost(System.Guid)">
            <summary>
            Returns a Post based on the specified id.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.InsertPost(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Persists a new Post in the current provider.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.UpdatePost(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Updates an exsiting Post.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.DeletePost(DotNetSlave.BlogEngine.BusinessLogic.Post)">
            <summary>
            Deletes the specified Post from the current provider.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.SelectPage(System.Guid)">
            <summary>
            Returns a Page based on the specified id.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.InsertPage(DotNetSlave.BlogEngine.BusinessLogic.Page)">
            <summary>
            Persists a new Page in the current provider.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.UpdatePage(DotNetSlave.BlogEngine.BusinessLogic.Page)">
            <summary>
            Updates an exsiting Page.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.DeletePage(DotNetSlave.BlogEngine.BusinessLogic.Page)">
            <summary>
            Deletes the specified Page from the current provider.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.SelectCategories">
            <summary>
            Retrieves all the categories.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogService.SaveCategories(DotNetSlave.BlogEngine.BusinessLogic.CategoryDictionary)">
            <summary>
            Saves the specified categories.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BlogService.Provider">
            <summary>
            Gets the current provider.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BlogService.Providers">
            <summary>
            Gets a collection of all registered providers.
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.BlogProviderSection">
            <summary>
            A configuration section for web.config.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BlogProviderSection.Providers">
            <summary>
            A collection of registered providers.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BlogProviderSection.DefaultProvider">
            <summary>
            The name of the default provider
            </summary>
        </member>
        <member name="T:DotNetSlave.BlogEngine.BusinessLogic.BlogProviderCollection">
            <summary>
            A collection of all registered providers.
            </summary>
        </member>
        <member name="M:DotNetSlave.BlogEngine.BusinessLogic.BlogProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
            Add a provider to the collection.
            </summary>
        </member>
        <member name="P:DotNetSlave.BlogEngine.BusinessLogic.BlogProviderCollection.Item(System.String)">
            <summary>
            Gets a provider by its name.
            </summary>
        </member>
    </members>
</doc>
